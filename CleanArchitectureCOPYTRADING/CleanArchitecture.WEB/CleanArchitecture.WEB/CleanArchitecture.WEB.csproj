<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net6.0</TargetFramework>
    <Nullable>enable</Nullable>
    <IsPackable>false</IsPackable>
    <!--<SpaProxyServerUrl>https://localhost:44421</SpaProxyServerUrl>-->
    <!--<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>-->
    <ImplicitUsings>enable</ImplicitUsings>
  </PropertyGroup>
  
	<PropertyGroup>
	  <GenerateDocumentationFile>true</GenerateDocumentationFile>
	  <UserSecretsId>17db1f31-cbab-400b-a407-6d95a2eccc8d</UserSecretsId>
	  <DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
	  <DockerfileContext>..\..</DockerfileContext>
	</PropertyGroup>
  
	<ItemGroup>
	  <Compile Remove="ClientApp\**" />
	  <Content Remove="ClientApp\**" />
	  <EmbeddedResource Remove="ClientApp\**" />
	  <None Remove="ClientApp\**" />
	</ItemGroup>
  <ItemGroup>
    <PackageReference Include="MediatR.Extensions.Microsoft.DependencyInjection" Version="10.0.1" />
    <!--<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.18" />-->
    <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.1">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.Extensions.ML" Version="3.0.1" />
    <PackageReference Include="Microsoft.ML" Version="3.0.1" />
    <PackageReference Include="Microsoft.ML.LightGbm" Version="3.0.1" />
    <PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.19.6" />
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
  </ItemGroup>

 
  <ItemGroup>
    <Compile Remove="Controllers\Binance\BinanceTraderIAControllerdeleted.cs" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\CleanArchitecture.Application\CleanArchitecture.Application.csproj" />
    <ProjectReference Include="..\..\CleanArchitecture.Data\CleanArchitecture.Infrastructure.csproj" />
    <ProjectReference Include="..\..\CleanArchitecture.Identity\CleanArchitecture.Identity.csproj" />
  </ItemGroup>

        <!-- Ensure Node.js is installed -->
    <!--<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">

    <Exec Command="node version" ContinueOnError="true">
      <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
    </Exec>
    <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
    <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
    <Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
  </Target>-->
  
</Project>
